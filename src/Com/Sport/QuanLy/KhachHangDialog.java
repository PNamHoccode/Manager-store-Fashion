/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package Com.Sport.QuanLy;

import Com.Sport.Dao.KhachHAngDao;
import Com.Sport.Entity.KhachHang;
import Com.Sport.ultils.Auth;
import Com.Sport.ultils.MsgBox;
import Com.Sport.ultils.XDate;
import java.util.Date;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import org.apache.log4j.Logger;
import org.apache.log4j.PropertyConfigurator;

/**
 *
 * @author ADMIN
 */
public class KhachHangDialog extends javax.swing.JDialog {

    /**
     * Creates new form Khachhang1
     */
    public KhachHangDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        tabs = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        btnXoa = new javax.swing.JButton();
        rdoNu = new javax.swing.JRadioButton();
        txtdiachi = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtDienThoai = new javax.swing.JTextField();
        rdokhac = new javax.swing.JRadioButton();
        txtEmail = new javax.swing.JTextField();
        rdoco = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        rdokhong = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnLast = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        rdoNam = new javax.swing.JRadioButton();
        btnsua = new javax.swing.JButton();
        btnMoi = new javax.swing.JButton();
        btnFirst = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        txtMakh = new javax.swing.JTextField();
        btnthem = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtHoTen = new javax.swing.JTextField();
        btnprep = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lbldanhsach = new javax.swing.JTable();
        jPanel13 = new javax.swing.JPanel();
        btnTimKiem5 = new javax.swing.JButton();
        txtTimKiem = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdoNu);
        rdoNu.setText("Nữ");

        jLabel3.setText("Điện thoại");

        jLabel5.setText("Thành Viên");

        buttonGroup1.add(rdokhac);
        rdokhac.setText("Khác");

        buttonGroup2.add(rdoco);
        rdoco.setSelected(true);
        rdoco.setText("Có");

        jLabel1.setText("Mã Khách Hàng");

        buttonGroup2.add(rdokhong);
        rdokhong.setText("Không");

        jLabel2.setText("Họ và tên");

        jLabel6.setText(" email");

        btnLast.setText(">>");
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });

        btnNext.setText(">|");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdoNam);
        rdoNam.setSelected(true);
        rdoNam.setText("Nam");

        btnsua.setText("Sửa");
        btnsua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsuaActionPerformed(evt);
            }
        });

        btnMoi.setText("Mới");
        btnMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoiActionPerformed(evt);
            }
        });

        btnFirst.setText("<<");
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });

        jLabel8.setText("Địa chỉ");

        btnthem.setText("Thêm");
        btnthem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnthemActionPerformed(evt);
            }
        });

        jLabel4.setText("Giới tính");

        btnprep.setText("|<");
        btnprep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnprepActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rdoco, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(rdoNam))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rdokhong, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(rdoNu)
                                        .addGap(43, 43, 43)
                                        .addComponent(rdokhac))))
                            .addComponent(jLabel3)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 455, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnthem)
                        .addGap(18, 18, 18)
                        .addComponent(btnXoa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnsua)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnMoi)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnFirst)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnprep)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnNext)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLast))
                    .addComponent(txtMakh)
                    .addComponent(txtHoTen)
                    .addComponent(txtEmail)
                    .addComponent(txtdiachi)
                    .addComponent(txtDienThoai))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtMakh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdoNam)
                    .addComponent(rdoNu)
                    .addComponent(rdokhac))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdoco)
                    .addComponent(rdokhong))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtdiachi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDienThoai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(90, 90, 90)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnMoi)
                    .addComponent(btnXoa)
                    .addComponent(btnthem)
                    .addComponent(btnsua)
                    .addComponent(btnprep)
                    .addComponent(btnFirst)
                    .addComponent(btnNext)
                    .addComponent(btnLast))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        tabs.addTab("Cập Nhật", jPanel1);

        lbldanhsach.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã Khách hàng", "Tên Khách Hàng", "Giới Tính", "Thành Viên", "Số Điện Thoại", "Email", "Địa Chỉ", "Ngày Đăng Ký"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        lbldanhsach.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbldanhsachMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(lbldanhsach);

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder("TÌM KIẾM"));

        btnTimKiem5.setText("Tìm");
        btnTimKiem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiem5btnTimKiemActionPerformed(evt);
            }
        });
        btnTimKiem5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                btnTimKiem5KeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, 614, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnTimKiem5)
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(btnTimKiem5)
                .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane2)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(169, Short.MAX_VALUE))
        );

        tabs.addTab("Danh Sách", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabs)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabs)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        this.delete();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        this.last();
    }//GEN-LAST:event_btnLastActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        this.next();
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoiActionPerformed
        // TODO add your handling code here:
        this.clearForm();
    }//GEN-LAST:event_btnMoiActionPerformed

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        this.first();
    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnthemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnthemActionPerformed
        // TODO add your handling code here:
        this.insert();
    }//GEN-LAST:event_btnthemActionPerformed

    private void btnprepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnprepActionPerformed
        this.prev();
    }//GEN-LAST:event_btnprepActionPerformed

    private void lbldanhsachMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbldanhsachMouseClicked
        if (evt.getClickCount() == 2) {
            this.row = lbldanhsach.rowAtPoint(evt.getPoint());
            this.edit();
            check();
        }
    }//GEN-LAST:event_lbldanhsachMouseClicked

    private void btnTimKiem5btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiem5btnTimKiemActionPerformed
        this.timKiem();
    }//GEN-LAST:event_btnTimKiem5btnTimKiemActionPerformed

    private void btnTimKiem5KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnTimKiem5KeyReleased
        filltable();
    }//GEN-LAST:event_btnTimKiem5KeyReleased

    private void btnsuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsuaActionPerformed
        this.update();
    }//GEN-LAST:event_btnsuaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KhachHangDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KhachHangDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KhachHangDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KhachHangDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                KhachHangDialog dialog = new KhachHangDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnMoi;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnTimKiem5;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnprep;
    private javax.swing.JButton btnsua;
    private javax.swing.JButton btnthem;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable lbldanhsach;
    private javax.swing.JRadioButton rdoNam;
    private javax.swing.JRadioButton rdoNu;
    private javax.swing.JRadioButton rdoco;
    private javax.swing.JRadioButton rdokhac;
    private javax.swing.JRadioButton rdokhong;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTextField txtDienThoai;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtHoTen;
    private javax.swing.JTextField txtMakh;
    private javax.swing.JTextField txtTimKiem;
    private javax.swing.JTextField txtdiachi;
    // End of variables declaration//GEN-END:variables
 public static final Logger logger = Logger.getLogger(KhachHangDialog.class);
    KhachHAngDao dao = new KhachHAngDao();
    int row = -1;

    public void init() {
        PropertyConfigurator.configure("\\DuAn1\\src\\Com\\Sport\\Log\\log4jj.properties");
        setLocationRelativeTo(null);
        setTitle("Quản Lý Nhân khách hàng");
        this.filltable();
        this.row = -1;
        this.updateStatus();
        check();
    }

    public void check() {
        if (Auth.isManager()) {
            btnXoa.setEnabled(true);
            btnXoa.setToolTipText(null);
        } else {
            btnXoa.setEnabled(false);
            btnXoa.setToolTipText(null);
        }
    }

    public void filltable() {
        DefaultTableModel model = (DefaultTableModel) lbldanhsach.getModel();
        model.setRowCount(0);
        try {
            String keyword = txtTimKiem.getText();
            List<KhachHang> list = dao.selectByKeyword(keyword);
            for (KhachHang kh : list) {
                Object[] row = {
                    kh.getMaKH(),
                    kh.getTenKH(),
                    kh.getGioiTinh(),
                    kh.isThanhVien() ? "có" : "không",
                    kh.getSoDT(),
                    kh.getEmail(),
                    kh.getDiaChi(),
                    kh.getNgayMua()
                };

                model.addRow(row);
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu!" + e.getMessage());
        }
    }

    void insert() {
        if (validates()) {
            String makh = txtMakh.getText();
            String tenkh = txtHoTen.getText();
            KhachHang model = dao.selectById(makh);
            if (model != null) {
                MsgBox.alert(this, "Mã khách hàng đã tồn tại");
            } else {
                String soDT = txtDienThoai.getText();
                if (!soDT.matches("[0-9]+")) {
                    MsgBox.alert(this, "Số điện thoại không hợp lệ!");
                    txtDienThoai.requestFocus();
                    txtDienThoai.setText("");
                } else {
                    model = getForm();
                    try {
                        dao.insert(model); // thêm mới
                        this.filltable(); // đổ lại bảng
                        this.clearForm(); // xóa trắng form
                        MsgBox.alert(this, "Thêm mới thành công!");
                        logger.info("Người dùng" + Auth.user.getMaNV() + "thêm thành công khách hàng" + tenkh);
                    } catch (Exception e) {
                        MsgBox.alert(this, "Thêm mới thất bại!");
                        logger.info("Người dùng" + Auth.user.getMaNV() + "thêm thất bại khách hàng" + tenkh);

                    }
                }
            }
        }
    }

    void update() {
        KhachHang kh = this.getForm();
        String tenkh = txtHoTen.getText();
        try {
            dao.update(kh); // Cập nhật
            this.filltable();// Đổ lại bảng
            MsgBox.alert(this, "Cập nhật thành công!");
            logger.info("NGười dùng" + Auth.user.getMaNV() + "cập nhật thành công khách hàng" + tenkh);
        } catch (Exception e) {
            MsgBox.alert(this, "Cập nhật thất bại!");
            logger.warn("NGười dùng" + Auth.user.getMaNV() + "cập nhật thành công khách hàng" + tenkh);

        }
    }

    void delete() {
        if (!Auth.isManager()) {
            MsgBox.alert(this, "Bạn không có quyền xóa người học!");
        } else if (MsgBox.confirm(this, "Bạn thực sự muốn xóa người học này?")) {
            String manh = txtMakh.getText();
            String tenkh = txtHoTen.getText();
            try {
                dao.delete(manh);
                this.filltable();
                this.clearForm();
                MsgBox.alert(this, "Xóa thành công!");
                logger.info("Người dùng" + Auth.user.getMaNV() + "thêm thành công khách hàng" + tenkh);

            } catch (Exception e) {
                MsgBox.alert(this, "Xóa thất bại!");
                logger.warn("Người dùng" + Auth.user.getMaNV() + "thêm thành công khách hàng" + tenkh);

            }
        }
    }

    void clearForm() {
        KhachHang nh = new KhachHang();
        // nh.setMaKH(Auth.user.getMaNV());
        //nh.setNgayMua(new Date());
        this.setForm(nh);
        this.row = -1;
        this.updateStatus();
    }

    void edit() {
        String makh = (String) lbldanhsach.getValueAt(this.row, 0);
        KhachHang kh = dao.selectById(makh);
        this.setForm(kh);
        this.updateStatus();
        tabs.setSelectedIndex(0);
        this.updateStatus();
    }

    void setForm(KhachHang nv) {
        txtMakh.setText(nv.getMaKH());
        txtHoTen.setText(nv.getTenKH());
        String gioitinh = nv.getGioiTinh();
        if (gioitinh != null) {
            if (gioitinh.equalsIgnoreCase("Nam")) {
                rdoNam.setSelected(true);

            } else if (gioitinh.equalsIgnoreCase("Nữ")) {
                rdoNu.setSelected(true);
            } else {
                rdokhac.setSelected(true);
            }

            rdoco.setSelected(nv.isThanhVien());
            rdokhong.setSelected(!nv.isThanhVien());
            txtDienThoai.setText(nv.getSoDT());
            txtEmail.setText(nv.getEmail());
            txtdiachi.setText(nv.getDiaChi());
            // txtngaymua.setText(XDate.toString(nv.getNgayMua(), "MM/dd/yyyy"));

        }

    }

    KhachHang getForm() {

        KhachHang kh = new KhachHang();
        kh.setMaKH(txtMakh.getText());
        kh.setTenKH(txtHoTen.getText());
        String gioiTinh;
        if (rdoNam.isSelected()) {
            gioiTinh = "Nam";
        } else if (rdoNu.isSelected()) {
            gioiTinh = "Nữ";
        } else {
            gioiTinh = "Khác";
        }
        kh.setGioiTinh(gioiTinh);
        kh.setThanhVien(rdoco.isSelected());
        kh.setSoDT(txtDienThoai.getText());
        kh.setEmail(txtEmail.getText());
        kh.setDiaChi(txtdiachi.getText());
        kh.setNgayMua(new Date());
        return kh;
    }

    void first() {
        this.row = 0;
        this.edit();
    }

    void prev() {
        if (this.row > 0) {
            this.row--;
            this.edit();
        }
    }

    void next() {
        if (this.row < lbldanhsach.getRowCount() - 1) {
            this.row++;
            this.edit();
        }
    }

    void last() {
        this.row = lbldanhsach.getRowCount() - 1;
        this.edit();
    }

    void updateStatus() {
        boolean edit = (this.row >= 0);
        boolean first = (this.row == 0);
        boolean last = (this.row == lbldanhsach.getRowCount() - 1);
        // Trạng thái form
        txtMakh.setEditable(!edit);
        btnthem.setEnabled(!edit);
        btnsua.setEnabled(edit);
        btnXoa.setEnabled(edit);

        // Trạng thái điều hướng
        btnprep.setEnabled(edit && !first);
        btnFirst.setEnabled(edit && !first);
        btnLast.setEnabled(edit && !last);
        btnNext.setEnabled(edit && !last);
    }

    private void timKiem() {
        this.filltable();
        this.clearForm();
        this.row = -1;
        this.updateStatus();

    }

    public boolean validates() {
        if (txtMakh.getText().isEmpty()) {
            MsgBox.alert(this, "Chưa nhập mã khách hàng");
            txtMakh.requestFocus();
            return false;
        }

        if (txtHoTen.getText().isEmpty()) {
            MsgBox.alert(this, "Chưa nhập tên khách hàng");
            txtHoTen.requestFocus();
            return false;
        }

        if (txtEmail.getText().isEmpty()) {
            MsgBox.alert(this, "Chưa nhập eamil");
            txtEmail.requestFocus();
            return false;
        }
        if (txtdiachi.getText().isEmpty()) {
            MsgBox.alert(this, "Chưa nhập số địa chỉ");
            txtdiachi.requestFocus();
            return false;
        }
        if (txtDienThoai.getText().isEmpty()) {
            MsgBox.alert(this, "Chưa nhập số điện thoại");
            txtDienThoai.requestFocus();

            return false;
        }

        return true;
    }
}
