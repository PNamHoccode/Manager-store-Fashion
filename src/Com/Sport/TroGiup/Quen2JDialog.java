 /*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package Com.Sport.TroGiup;

import Com.Sport.Dao.NhanVienDao;
import Com.Sport.ultils.XImage;


import Com.Sport.Entity.NhanVien;
import Com.Sport.ultils.MsgBox;

import java.awt.Color;
import java.util.Properties;
import java.util.Random;
import javax.mail.Authenticator;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.swing.BorderFactory;
import javax.swing.border.Border;
import javax.mail.*;
import javax.mail.internet.*;
import java.util.*;

/**
 *
 * @author ngomi
 */
public class Quen2JDialog extends javax.swing.JDialog {

    String email;
    NhanVienDao dao = new NhanVienDao();
    Quen3JDialog quenmatkhau3 = new Quen3JDialog(null, true);
    private long startTime = 0;
    private String confirmationCode = "";

    /**
     * Creates new form QuenMatKhau
     */
    public Quen2JDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        init();
    }

    

    /**
     * TimerTask được sử dụng để thực hiện một tác vụ (hoặc công việc) cụ thể
     * tại một thời điểm cụ thể hoặc với một tần suất cụ thể. Nó là một lớp trừu
     * tượng trong Java và định nghĩa một phương thức run() mà bạn có thể ghi đè
     * để đặt mã nguồn cho công việc cần thực hiện.
     */
    public void starCountDownTimer() {
        TimerTask countDownTask = new TimerTask() {
            @Override
            public void run() {
                long currentTime = System.currentTimeMillis(); // lấy thời gian hiện tại
                long elapsedTimeInSeconds = (currentTime - startTime) / 1000;//chứa số giây đã trôi qua.
                long remainingTimeInSeconds = 60 - elapsedTimeInSeconds;

                // Kiểm tra nếu thời gian còn lại là âm hoặc hết 60 giây
                if (remainingTimeInSeconds <= 0) {
                    // Hủy bỏ TimerTask và hiển thị thông báo hết thời gian
                    this.cancel();
                    lblThoiGianConLai.setText("Hết thời gian");
                } else {
                    // Hiển thị thời gian còn lại
                    lblThoiGianConLai.setText("Thời gian còn lại: " + remainingTimeInSeconds + "s");
                }
            }
        };

        Timer countDownTimer = new Timer(true);// không ngăn chặn thoát khỏi ứng dụng
        countDownTimer.scheduleAtFixedRate(countDownTask, 0, 1000);
        /**
         * Lập lịch để thực thi countDownTask (đoạn mã trong TimerTask) định kỳ.
         * countDownTask sẽ được thực thi lần đầu tiên ngay lập tức (do tham số
         * thứ hai là 0) và sau đó sau mỗi 1000 milliseconds (1 giây) một lần.
         */
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        txtMa = new javax.swing.JTextField();
        btnTimKiem = new javax.swing.JButton();
        btnQuayLai = new javax.swing.JButton();
        btnGuiMa = new javax.swing.JButton();
        lblThoiGianConLai = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 51));
        jLabel1.setText("Nhập mã bảo mật");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(292, 20, -1, -1));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 722, 10));
        getContentPane().add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 180, 722, 10));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 255, 102));
        jLabel2.setText("Mã xác nhận đã được gửi vào qua Email vui lòng kiểm tra Email để nhận mã của bạn");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 76, -1, 31));

        lblEmail.setForeground(new java.awt.Color(0, 255, 204));
        getContentPane().add(lblEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 125, 130, 20));

        txtMa.setToolTipText("");
        getContentPane().add(txtMa, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 125, 299, 37));

        btnTimKiem.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnTimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Com/Sport/Icon/Zoom.png"))); // NOI18N
        btnTimKiem.setText("Tìm kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });
        getContentPane().add(btnTimKiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 190, 110, 30));

        btnQuayLai.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnQuayLai.setIcon(new javax.swing.ImageIcon("D:\\DuAn1\\src\\Com\\Sport\\Icon\\prev.png")); // NOI18N
        btnQuayLai.setText("Quay lại");
        btnQuayLai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuayLaiActionPerformed(evt);
            }
        });
        getContentPane().add(btnQuayLai, new org.netbeans.lib.awtextra.AbsoluteConstraints(461, 190, 110, -1));

        btnGuiMa.setIcon(new javax.swing.ImageIcon("D:\\DuAn1\\src\\Com\\Sport\\Icon\\gmail_732200.png")); // NOI18N
        btnGuiMa.setText("Gửi mã");
        btnGuiMa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuiMaActionPerformed(evt);
            }
        });
        getContentPane().add(btnGuiMa, new org.netbeans.lib.awtextra.AbsoluteConstraints(323, 125, -1, 37));

        lblThoiGianConLai.setForeground(new java.awt.Color(102, 255, 102));
        lblThoiGianConLai.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Com/Sport/Icon/Alarm.png"))); // NOI18N
        lblThoiGianConLai.setText("Thời gian còn lại");
        getContentPane().add(lblThoiGianConLai, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 196, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon("D:\\DuAn1\\src\\Com\\Sport\\logos\\togiup2.jpg")); // NOI18N
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 700, 230));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        tiepTuc();
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void btnGuiMaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuiMaActionPerformed
        // Khởi tạo thời gian bắt đầu khi gửi mã
        startTime = System.currentTimeMillis();
        // Tạo mã xác nhận mới
        confirmationCode = ranDom(6);
        String toEmail = lblEmail.getText();
        String subject = "Mã OTP thay đổi mật khẩu";
        String body = "OTP của bạn là: " + confirmationCode +"."+" "+"Bạn tuyệt đối không cung cấp OTP cho người khác để tránh những rủi ro!";
        try {
            senEmail(toEmail, subject, body);
            starCountDownTimer();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnGuiMaActionPerformed

    private void btnQuayLaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuayLaiActionPerformed
        this.dispose();
        new QuenJDialog(null, true).setVisible(true);
    }//GEN-LAST:event_btnQuayLaiActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Quen2JDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Quen2JDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Quen2JDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Quen2JDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
 

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Quen2JDialog dialog = new Quen2JDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGuiMa;
    private javax.swing.JButton btnQuayLai;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblThoiGianConLai;
    private javax.swing.JTextField txtMa;
    // End of variables declaration//GEN-END:variables
void init() {
        setIconImage(XImage.getAppIcon());
        setLocationRelativeTo(null);
        setTitle("QUÊN MẬT KHẨU");
        getContentPane().setBackground(Color.white);      
        lblThoiGianConLai.setText("");
        
    }

    public void setEmail(String email) {
        this.email = email;
        lblEmail.setText(email);
    }

    public void LayTenNhanVien() {
        String email = lblEmail.getText();
        NhanVien nv = dao.selectByEmail(email);
        String MaNV = nv.getMaNV();
        String hoTen = nv.getHoTen();
        quenmatkhau3.setMaNV(MaNV);
        quenmatkhau3.setHoTen(hoTen);
        quenmatkhau3.setEmail(email);

    }

    public String ranDom(int lenght) {
        String characters = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
        StringBuilder code = new StringBuilder();
        Random random = new Random();
        for (int i = 0; i < lenght; i++) {
            char randomChar = characters.charAt(random.nextInt(characters.length()));
            code.append(randomChar);
        }
        return code.toString();
    }

    public void senEmail(String toEmail, String subject, String body) {
        String username = "systemmanagementstoresport@gmail.com";
        String password = "zehjufczkzsdlich";
        Properties prop = new Properties();
        prop.put("mail.smtp.host", "smtp.gmail.com");//đại diện cho máy chủ SMTP của Gmail.
        prop.put("mail.smtp.port","587");//đại diện cho cổng kết nối SMTP.
        prop.put("mail.smtp.auth", "true");// cho phép xác thực khi kết nối với máy chủ SMTP.
        prop.put("mail.smtp.starttls.enable", "true"); //TLS , cho phép giao tiếp bảo mật qua TLS (Transport Layer Security).
        Session session = Session.getInstance(prop, new javax.mail.Authenticator() {
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(username, password);
            }
        });

        try {
            // Tạo đối tượng MimeMessage
            Message message = new MimeMessage(session);
            // Đặt thông tin người gửi, người nhận, chủ đề và nội dung email
            message.setFrom(new InternetAddress(username));
            message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(toEmail));
            message.setSubject("Thông Tin Mật Khẩu");
            
            message.setText(body);
            Transport.send(message);
            
        } catch (Exception e) {
            MsgBox.alert(this, "Gửi mail thất bại"+e.getMessage());
        }
    }

    public void tiepTuc() {
        String ma = txtMa.getText();
        if (confirmationCode.equals("")) {
            MsgBox.alert(this, "Vui lòng nhấn nút 'Gửi mã' trước.");
        } else {
            long currentTime = System.currentTimeMillis();
            long elapsedTimeInSeconds = (currentTime - startTime) / 1000;
            if (elapsedTimeInSeconds > 60) {
                MsgBox.alert(this, "Mã xác nhận đã hết hạn. Vui lòng nhấn nút 'Gửi mã' để gửi mã mới.");
            } else if (ma.equals(confirmationCode)) {
                LayTenNhanVien();
                this.dispose();
                quenmatkhau3.setVisible(true);
            } else {
                MsgBox.alert(this, "Mã xác nhận không đúng");
            }
        }
    }
}
